---
# Enable creating dynamic templated NGINX HTML demo websites.
nginx_config_html_demo_template_enable: false
nginx_config_html_demo_template:
  - template_file: www/index.html.j2
    html_file_name: index.html
    html_file_location: /usr/share/nginx/html
    web_server_name: Default

# Enable creating dynamic templated NGINX configuration files.
# Defaults are the values found in a fresh NGINX installation.
# Unless otherwise noted, all variables are *strings* and *optional* (*required* values inside a dictionary are only required if the top level variable is defined).
nginx_config_main_template_enable: false
nginx_config_main_template:
  template_file: nginx.conf.j2
  deployment_location: /etc/nginx/nginx.conf
  config:
    main:  # Configure NGINX main core directives
      load_module: modules/ngx_http_js_module.so  # Can be a string or a list
        # - modules/ngx_http_js_module.so
      user:  # nginx  # Can alternatively be a 'user' string
        username: nginx  # Required
        group: nginx
      # worker_cpu_affinity:
      #   auto: true  # Optional boolean
      #   cpumask: 0101 1010  # Optional if 'auto' is set to 'true'
      # worker_priority: 0  # Number
      worker_processes: auto  # Can be a number or 'auto'
      # worker_rlimit_core: 1m
      # worker_rlimit_nofile: 10000  # Number
      # worker_shutdown_timeout: 30m
      error_log:  # /var/log/nginx/error.log  # Can be a string, a dictionary, or a list of dictionaries. The 'file' variable is only required when setting a 'level'.
        file: /var/log/nginx/error.log  # Required
        level: notice
        # - /var/log/nginx/error.log
        # - file: /var/log/nginx/error.log  # Required
        #   level: notice
      pid: /var/run/nginx.pid
      daemon: true  # Boolean
      # debug_points: abort  # Can be 'abort' or 'stop'
      # env:  # MALLOC_OPTIONS  # Can be a string, a dictionary, or a list of dictionaries. The 'variable' variable is only required when setting a 'value'.
      #   variable: PERL5LIB  # Required
      #   value: /data/site/modules
      #   - MALLOC_OPTIONS
      #   - variable: PERL5LIB  # Required
      #     value: /data/site/modules
      # lock_file: logs/nginx.lock
      # master_process: true  # Boolean
      # pcre_jit: false  # Boolean
      # ssl_engine: device
      # thread_pool:  # Can be a dictionary or a list of dictionaries.
      #   - name: default  # Required
      #     threads: 32  # Required boolean
      #     max_queue: 65536  # Boolean
      # timer_resolution: 1s
      # working_directory: /etc/nginx
    events:  # Configure NGINX events
      # accept_mutex: false  # Boolean
      # accept_mutex_delay: 500ms
      # debug_connection:  # localhost  # Can be a string or a list
      #   - localhost
      # multi_accept: false  # Boolean
      # use: epoll
      # worker_aio_requests: 32  # Number
      worker_connections: 1024  # Number
    http:
      include: /etc/nginx/conf.d/*.conf  # Can be a string or a list
        # - /etc/nginx/conf.d/*.conf
    stream:
      include: /etc/nginx/conf.d/stream/*.conf  # Can be a string or a list
        # - /etc/nginx/conf.d/stream/*.conf

# Enable creating dynamic templated NGINX HTTP configuration files.
# Defaults will not produce a valid configuration. Instead they are meant to showcase
# the options available for templating. Each dictionary in the top level list/array represents a new configuration file.
# Unless otherwise noted, all variables are *strings* and *optional* (*required* values inside a dictionary are only required if the top level variable is defined).
# Most (not all) of these directives can also be used under the 'server' and 'location' contexts, as briefly seen at the end of the below dictionary.
nginx_config_http_template_enable: false
nginx_config_http_template:
  - template_file: http/default.conf.j2
    deployment_location: /etc/nginx/conf.d/default.conf
    config:
      upstreams:  # Configure NGINX upstreams
        - name: backend  # Required
          servers:  # Note -- Cannot be used if 'state' directive is defined
            - address: localhost  # Required -- You can use an IP address, a Unix socket, or a domain -- include port details inline if necessary
              weight: 1  # Number
              max_conns: 0  # Number
              max_fails: 1  # Number
              fail_timeout: 10s
              backup: false  # Boolean
              down: false  # Boolean
              resolve: false  # Requires 'resolver' directive to be defined
              service: http  # Requires 'resolve' to be 'true'
              route: a  # Requires 'sticky route' directive to be defined
              slow_start: 0s  # Cannot be used if using 'hash', 'ip_hash' or 'random' load balancing methods
              drain: false  # Boolean
          zone:
            name: backend_mem_zone  # Required
            size: 64k
          state: /var/lib/nginx/state/servers.conf  # Available only in NGINX Plus -- Cannot be used if 'servers' directive is defined
          hash:  # Note -- You can only set one load balancing method -- 'round_robin' is used if no method is specified
            key: key  # Required
            consistent: false  # Boolean
          ip_hash: false  # Boolean
          least_conn: false  # Boolean
          least_time:
            response: last_byte  # Required -- Must be one of 'header' or 'last_byte'
            inflight: false  # Boolean
          random:
            two: true  # Boolean
            method: least_time=last_byte  # Requires two to be set to 'true'
          queue:
            number: 10  # Required number
            timeout: 60s
          keepalive: 32  # Number
          keepalive_requests: 100  # Number
          keepalive_time: 1h
          keepalive_timeout: 60s
          ntlm: false  # Available only in NGINX Plus -- Boolean
          resolver:  # Available only in NGINX Plus
            address: []  # Required -- Can be a string or a list
            valid: 30s
            ipv6: false  # Boolean
            status_zone: backend_mem_zone
          resolver_timeout: 30s
          sticky_cookie:  # Note -- You can only set one type of sticky session affinity
            name: cookie  # Required
            expires: 1d
            domain: example.com
            httponly: false  # Boolean
            samesite: none  # Note -- Must be one of 'strict', 'lax' or 'none'
            secure: true  # Boolean
            path: path
          sticky_route: []  # Can be a string or a list
          sticky_learn:  # Available only in NGINX Plus
            create: []  # Required -- Can be a string or a list
            lookup: []  # Required -- Can be a string or a list
            zone:  # Required
              name: client_sessions  # Required
              size: 1m  # Required
            timeout: 10m
            header: false  # Boolean
            sync: false  # Boolean
      core:  # Configure NGINX HTTP core directives
        absolute_redirect: true  # Boolean
        aio:  # false  # You can set it to 'true' or 'false' to avoid using 'threads'
          threads: true  # Set it to 'true' to enable threads. Alternatively, use the threads 'pool' you wish to use.
        aio_write: false  # Boolean
        alias: path  # Available only in location context
        auth_delay: 0s
        chunked_transfer_encoding: true  # Boolean
        client_body_buffer_size: 8k
        client_body_in_file_only: false  # Boolean -- Can also be set to 'clean'
        client_body_in_single_buffer: false  # Boolean
        client_body_temp_path:
          path: /var/cache/nginx  # Required
          level: 2  # Required number -- Can be '1', '2' or '3'
        client_body_timeout: 60s
        client_header_buffer_size: 1k
        client_header_timeout: 60s
        client_max_body_size: 1m
        connection_pool_size: 256  # Not available in location context
        default_type: text/plain
        directio: false  # Can also be set to a size
        directio_alignment: 512
        disable_symlinks:  # Can be directly set to 'true', 'false' or 'if_not_owner'. A dictionary is required if you want to set 'from'.
          check: 'on'  # Required  -- Can be set to 'on' or 'if_not_owner'
          from: $document_root
        error_page:
          - code:  # Required number -- Can be a number or a list of numbers
              - 404
            response: 404
            uri: /404.html  # Required
        etag: true  # Boolean
        if_modified_since: exact  # Can be set to 'off', 'exact' or 'before'
        ignore_invalid_headers: true  # Boolean -- Not available in the 'location' context
        include: path  # Note -- This directive originally belongs in the NGINX core module, but we are making an exception here
        index: path  # Note -- This directive originally belongs in the NGINX index module, but we are making an exception here
        internal: false  # Boolean -- Only available in the 'location' context
        keepalive_disable: msie6  # Can be a string or a list
        keepalive_requests: 1000  # Number
        keepalive_time: 1h
        keepalive_timeout:  # Can be a string or a dictionary. The latter is required to set 'header_timeout'
          timeout: 75s  # Required
          header_timeout: 75s
        large_client_header_buffers:
          number: 4  # Required number
          size: 8k  # Required
        limit_except:  # Available only in 'location' context
          method: GET  # Required -- Can be a string or a list
          directive:  # Can be a string or a list
            - allow all
        limit_rate: 0
        limit_rate_after: 0
        lingering_close: true  # Can be set to 'true', 'false' or 'always'
        lingering_time: 30s
        lingering_timeout: 5s
        listen:
          - address: 0.0.0.0  # Can also be a unix path
            port: 80
            default_server: true  # Boolean
            ssl: false  # Boolean
            http2: false  # Boolean
            spdy: false  # Boolean
            proxy_protocol: false  # Boolean
            fastopen: 12  # Number
            backlog: 511  # Number
            rcvbuf: 512
            sndbuf: 512
            deffered: false  # Boolean
            bind: false  # Boolean
            ipv6only: false  # Boolean
            reuseport: false  # Boolean
            so_keepalive:  # false  # Boolean -- alternatively you can specify 'keepidle', 'keepintvl', and 'keepcnt'
              keepidle: 30m
              keepintvl: 5
              keepcnt: 10
        log_not_found: true  # Boolean
        log_subrequest: false  # Boolean
        max_ranges: 0  # Number
        merge_slashes: true  # Boolean
        msie_padding: true  # Boolean
        msie_refresh: false  # Boolean
        open_file_cache:  # false  # Can be set to 'false', alternatively use max and inactive
          max: 10  # Required
          inactive: 60s  # Optional
        open_file_cache_errors: false  # Boolean
        open_file_cache_min_uses: 1  # Number
        open_file_cache_valid: 60s
        output_buffers:
          number: 2  # Required
          size: 32k  # Required
        port_in_redirect: true  # Boolean
        postpone_output: 1460
        read_ahead: 0
        recursive_error_pages: false  # Boolean
        request_pool_size: 4k
        reset_timedout_connection: false  # Boolean
        resolver:
          address: 127.0.0.1  # Required -- Can also be a list
          valid: 60s
          ipv6: false  # Boolean
          status_zone: zone  # Only available in NGINX Plus
        resolver_timeout: 30s
        root: html
        satisfy: all  # Can be 'all' or 'any'
        send_lowat: 0  # Not used on Linux, Solaris and Windows
        send_timeout: 60s
        sendfile: false  # Boolean
        sendfile_max_chunk: 0
        server_name: ""  # Only allowed in 'server' context -- can be a list
          # - server.com
          # - www.server.com
        server_name_in_redirect: false  # Boolean
        server_names_hash_bucket_size: 32
        server_names_hash_max_size: 512
        server_tokens: true  # Can also be 'build' or a string
        subrequest_output_buffer_size: 4k
        tcp_nodelay: true  # Boolean
        tcp_nopush: false  # Boolean
        try_files:
          files: $uri  # Required - Can be a string or a list
            # - $uri1
            # - $uri2
          uri: /uri  # Must set either the 'uri' or 'code' parameter
          code: code  # Must set either the 'uri' or 'code' parameter
        types:
          - mime: text/html  # Required
            extensions: html  # Required -- Can be a string or a list
              # - html
              # - htm
        types_hash_bucket_size: 64
        types_hash_max_size: 1024
        underscores_in_headers: false  # Boolean -- Not allowed in 'location' context
        variables_hash_bucket_size: 64  # Only allowed in 'http' context
        variables_hash_max_size: 1024  # Only allowed in 'http' context
      ssl:
        buffer_size: 16k
        certificate: /path/to/file  # String or list
        certificate_key: /path/to/file  # String or list
        ciphers: HIGH  # String or list
          # - HIGH
          # - "!aNull"
          # - "!MD5"
        client_certificate: /path/to/file
        conf_command: 'command'  #  String or list
          # - 'command'
        crl: /path/to/file
        dhparam: /path/to/file
        early_data: false  # Boolean
        ecdh_curve: auto  # String or list
          # - prime256v1
        ocsp: false  # Boolean or 'leaf'
        ocsp_cache: false  # Can be set to 'false' or use the 'name'/'size' dict to create a shared cache
          # name: cache  # Required
          # size: 16k  # Required
        ocsp_responder: <url>
        password_file: /path/to/file
        prefer_server_ciphers: false  # Boolean
        protocols: TLSv1  # String or list
          # - TLSv1
          # - TLSv1.1
          # - TLSv1.2
        reject_handshake: false  # Boolean
        session_cache: none  #  Can be set to 'false', 'none', 'builtin' (uses the 'enable' and 'size' dict), or 'shared' (uses the 'name' and 'size' dict).
          # builtin:
          #   enable: false  # Required
          #   size: 16k
          # shared:
          #   name: cache  # Required
          #   size: 16k  # Required
        session_ticket_key: /path/to/file  # String or list
        session_tickets: true  # Boolean
        session_timeout: 5m
        stapling: false  # Boolean
        stapling_file: /path/to/file
        stapling_responder: <url>
        stapling_verify: false  # Boolean
        trusted_certificate: /path/to/file
        verify_client: false  # Boolean, 'optional' or 'optional_no_ca'
        verify_depth: 1  # Number
      app_protect_waf:  # Only available when using NGINX App Protect WAF -- Configure NGINX App Protect WAF
        physical_memory_util_thresholds:
          high: 100  # Required
          low: 100  # Required
        cpu_thresholds:
          high: 100  # Required
          low: 100  # Required
        failure_mode_action: pass  # Can be set to 'pass' or 'drop'
        cookie_seed: encryptionseed
        compressed_requests_action: drop  # Can be set to 'pass' or 'drop'
        reconnect_period_seconds: 5  # Number
        request_buffer_overflow_action: pass  # Can be set to 'pass' or 'drop'
        user_defined_signatures: /path/to/file  # String or list
          # - /path/to/file1
          # - /path/to/file2
        enable: false  # Boolean
        policy_file: /path/to/file
        security_log_enable: false  # Boolean
        security_log:  # Can be a dictionary or a list of dictionaries
          - path: /path/to/file  # Required
            dest: dest  # Required
      app_protect_dos:  # Only available when using NGINX App Protect DoS -- Configure NGINX App Protect DoS
        enable: true  # Boolean
        monitor: url
        name: samplename
        policy_file: /etc/app_protect/conf/BADOSDefaultPolicy.json
        security_log_enable: true  # Boolean
        security_log:
          path: /etc/app_protect_dos/log-default.json
          dest: syslog:server=10.1.1.1:514
        liveness:  # Only available in the 'http' context
          enable: true  # Required
          uri: example.com
          port: 80
        readiness:  # Only available in the 'http' context
          enable: true  # Required
          uri: example.com
          port: 80
      proxy:  # Configure Proxy
        bind:  # Set to 'false' and remove/comment nested variables to disable proxy_bind
          address: 0.0.0.0  # Required
          transparent: false  # Boolean
        buffer_size: 4k
        buffering: true  # Boolean
        buffers:
          number: 8  # Required number
          size: 4k  # Required
        busy_buffers_size: 8k
        cache: false  # Set to 'false' or specify cache zone
        cache_background_update: false  # Boolean
        cache_bypass: $cookie_seed  # String, list, or nested list
          # - - $cookie_nocache
          #   - $arg_nocache$arg_comment
          # - $cookie_path
        cache_convert_head: true  # Boolean
        cache_key: $scheme$proxy_host$request_uri
        cache_lock: false  # Boolean
        cache_lock_age: 5s
        cache_lock_timeout: 5s
        cache_max_range_offset: 1  # Number
        cache_methods: GET  # String or list
          # - GET
          # - HEAD
        cache_min_uses: 1  # Number
        cache_path:
          - path: /var/cache/nginx/proxy/backend  # Required
            levels: "1:1"
            use_temp_path: false  # Boolean
            keys_zone:  # Required
              name: backend_proxy_cache  # Required
              size: 10m  # Required
            inactive: 10m
            max_size: 2g
            min_free: 1g
            manager_files: 100  # Number
            manager_sleep: 500ms
            manager_threshold: 200ms
            loader_files: 100  # Number
            loader_sleep: 50ms
            loader_threshold: 200ms
            purger: false  # Boolean -- Purger parameters are available only in NGINX Plus
            purger_files: 10  # Number
            purger_sleep: 50ms
            purger_threshold: 50ms
        cache_purge: sample  # String or list
          # - cache_key
          # - cache_purge
        cache_revalidate: false  # Boolean
        cache_use_stale: false  # String or list -- set to 'false' to set to 'off'
          # - error
          # - timeout
        cache_valid:  # 10m  # String, dictionary or list of dictionaries. 'time' is required when using 'code'.
          - code: 200  # String or list
            # - 201
            # - 202
            time: 10m  # Required
        connect_timeout: 60s
        cookie_domain: false  # Set to 'false' and remove/comment nested variables to disable proxy_cookie_domain. Variables can be a dictionary or list of dictionaries.
          # - domain: localhost  # Required
          #   replacement: example.org  # Required
        cookie_flags: false  # Set to 'false' and remove/comment nested variables to disable proxy_cookie_flags. Variables can be a dictionary or list of dictionaries.
          # cookie: one  # Required
          # flag:  # String or list
          #   - httponly
        cookie_path: false  # Set to 'false' and remove/comment nested variables to disable proxy_cookie_path. Variables can be a dictionary or list of dictionaries.
          # - path: $uri  # Required
          #   replacement: $someuri  # Required
        force_ranges: false  #  Boolean
        headers_hash_bucket_size: 64
        headers_hash_max_size: 512
        hide_header: Date  # String or list
          # - Date
          # - X-Accel-Redirect
        http_version: 1.1  # Can be 1.0 or 1.1
        ignore_client_abort: false  # Boolean
        ignore_headers: X-Accel-Redirect  # String or list -- can be one of 'X-Accel-Redirect', 'X-Accel-Expires', 'X-Accel-Limit-Rate', 'X-Accel-Buffering', 'X-Accel-Charset', 'Expires', 'Cache-Control', 'Set-Cookie' or 'Vary'.
          # - X-Accel-Redirect
        intercept_errors: false  # Boolean
        limit_rate: 0
        max_temp_file_size: 1024m
        method: GET
        next_upstream: false  # Set to 'false' to disable proxy_next_upstream or include a variable string or list
          # - error
          # - timeout
        next_upstream_timeout: 0
        next_upstream_tries: 0  # Number
        no_cache: $cookie_nocache  # String or list
          # - - $cookie_nocache
          #   - $arg_nocache$arg_comment
          # - $arg_nocache$arg_comment
        pass: http://127.0.0.1
        pass_header: Date  # String or list
          # - Date
          # - X-Accel-Redirect
        pass_request_body: false  # Boolean
        pass_request_headers: true  # Boolean
        read_timeout: 60s
        redirect:  # false  # Set to 'false' to disable proxy_redirect or 'default' to use default values. Otherwise, use the 'original' and 'replacement' parameters (can also be a list).
          original: http://upstream:port/two/  # Required when using 'replacement'
          replacement: /one/  # Required when using 'original'
          # - default
          # - original: http://upstream:port/two/
          #   replacement: /one/
        request_buffering: false  # Boolean
        send_lowat: 0
        send_timeout: 60s
        set_body: body
        set_header:  # Dictionary or list of dictionaries
          field: Host
          value: $proxy_host
          # - field: Connection
          #   value: close
        socket_keepalive: false  # Boolean
        ssl_certificate: /path/to/file
        ssl_certificate_key: /path/to/file
        ssl_ciphers: DEFAULT  # String or list
          # - DEFAULT
        ssl_conf_command: 'command'  # String or list
          # - 'command'
        ssl_crl: /path/to/file
        ssl_name: $proxy_host
        ssl_password_file: /path/to/file
        ssl_protocols: TLSv1  # String or list
          # - TLSv1
          # - TLSv1.1
          # - TLSv1.2
        ssl_server_name: false  # Boolean
        ssl_session_reuse: true  # Boolean
        ssl_trusted_certificate: /path/to/file
        ssl_verify: false  # Boolean
        ssl_verify_depth: 1  # Number
        store: false  # Boolean or string
        store_access:
          user: rw
          group: rw
          all: r
        temp_file_write_size: 8k
        temp_path:
          path: /var/cache/nginx/proxy/temp  # Required
          level: 2  # One of '1', '2' or '3'
      grpc:  # Configure GRPC
        bind:  # Set to 'false' and remove/comment nested variables to disable grpc_bind
          address: $remote_addr  # Required
          transparent: true  # Boolean
        buffer_size: 4k
        connect_timeout: 60s
        hide_header: []  # string or list
        ignore_headers: []  # string or list -- 'X-Accel-Redirect' or 'X-Accel-Charset'
        intercept_errors: false  # Boolean
        next_upstream: []  # string list
        next_upstream_timeout: 0
        next_upstream_tries: 0
        pass: uri
        pass_header: []  # string or list
        read_timeout: 60s
        send_timeout: 60s
        set_header:  # Can be a dictionary or a list of dictionaries
          - field: Accept-Encoding  # Required
            value: '""'  # Required
        socket_keepalive: false  # Boolean
        ssl_certificate: /path/to/file
        ssl_certificate_key: /path/to/file
        ssl_ciphers: DEFAULT
        ssl_conf_command: 'command'  # Can be a string or a list
        ssl_crl: /path/to/file
        ssl_name: serverName
        ssl_password_file: /path/to/file
        ssl_protocols: []  # String or list
        ssl_server_name: false  # Boolean
        ssl_session_reuse: true  # Boolean
        ssl_trusted_certificate: /path/to/file
        ssl_verify: false  # Boolean
        ssl_verify_depth: 1
      access:  # Configure HTTP access
        allow: localhost  # Can be string or list
        deny: 192.168.1.100  # Can be string or list
      auth_basic:  # Configure basic auth
        realm: false  # Set to 'false' to set auth_basic to 'off' -- otherwise, you can specify a 'realm'
        user_file: /path/to/file
      auth_request:  # Configure request auth
        uri: false  # Set to 'false' to set auth_request to 'off' -- otherwise, you can specify an 'uri'
        set:
          variable: $temp  # Required
          value: auth  # Required
      auth_jwt:  # Only available in NGINX Plus -- Configure JWT auth
        enable:  #  Set to 'false' and remove/comment nested variables to set auth_jwt to 'off'
          realm: realm  # Required
          token: $cookie_auth_token
        claim_set:  # Can be a dictionary or a list of dictionaries
          - variable: $email  # Required
            name:  # Required string or list
              - info
        header_set:  # Can be a dictionary or a list of dictionaries
          - variable: $job  # Required
            name: info  # Required string or list
        key_file: /path/to/file
        key_request: /path/to/file
        leeway: 0s
        type: signed  # One of 'signed' or 'encrypted'
      api:  # Configure NGINX Plus HTTP API
        enable:  # true  # Set to Boolean directly to simply enable the 'api' directive
          write: true  # Boolean
        status_zone: one
      stub_status: true  # Configure NGINX OSS stub status
      autoindex:  # Configure autoindex
        enable: false  # Boolean
        exact_size: true  # Boolean
        format: html
        localtime: false  # Boolean
      gzip:  # Configure GZIP
        enable: true  # Boolean
        buffers:
          number: 32  # Required
          size: 4k  # Required
        comp_level: 1
        disable: []  # string or list
        http_version: 1.1  # Optional -- One of '1.0' or '1.1'
        min_length: 20
        proxied: []  # Set to 'false' to set to 'off' -- otherwise, you can specify a string or a list
        types: []  # String or list
        vary: false  # Boolean
      headers:  # Configure headers
        add_headers:  # Can be a dictionary or a list of dictionaries
          - name: Strict-Transport-Security  # Required
            value: '"max-age=15768000; includeSubDomains"'  # Required
            always: false  # Boolean
        add_trailers:  # Can be a dictionary or a list of dictionaries
          - name: Strict-Transport-Security  # Required
            value: '"max-age=15768000; includeSubDomains"'  # Required
            always: false  # Boolean
        expires:  # Set to 'false' to set to 'off' or set to a value -- otherwise, you can also use the below dictionary
          modified: true  # Boolean
          time: "12h"
      health_check:  # Only available in NGINX Plus -- Configure NGINX Plus health checks
        health_checks:
          - interval: 5s
            jitter: 0
            fails: 1  # Number
            passes: 1  # Number
            uri: /
            mandatory: false  # Boolean
            persistent: false  # Boolean
            match: match
            port: 80
            grpc_service: service
            grpc_status: 12
        match:  # Optional list
          - name: name  # Required
            conditions: []  # list
              # - status 200
      keyval:  # Available only in NGINX Plus -- Configure NGINX Plus key value store
        keyvals:
          - key: key  # Required
            variable: $var  # Required
            zone: one  # Required
        zones:
          - name: one  # Required
            size: 32k  # Required
            state: /var/lib/nginx/state/one.keyval
            timeout: 60m
            type: string  # One of 'string', 'ip' or 'prefix'
            sync: false  # Boolean
      limit_req:  # Configure request limits
        limit_reqs:
          - zone: one  # Required
            burst: 5  # Number
            delay: false  # Set it to 'false' to set it to 'nodelay', otherwise specify a delay value
        dry_run: false  # Boolean
        log_level: error  # Optional
        status: 503  # Number
        zones:
          - key: $binary_remote_addr  # Required
            name: one  # Required
            size: 1m  # Required
            rate: 10r/s  # Required
            sync: false  # Boolean
      log:  # Configure logs
        format:
          - name: main  # Required
            escape: default  # Can be 'default', 'json' or 'none'
            format: |  # Required
              '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for"'
        access:  # false  # Can be set to 'false' to set to 'off'
          - path: /var/log/nginx/access.log  # Required
            format: main
            buffer: 1m
            gzip: 5  # Can also be set to 'true'
            flush: 10h
            if: $loggable
        error:  # /var/log/nginx/error.log  # Can be a string, a dictionary, or a list. The 'file' variable is only required when setting a 'level'. This directive does not belong in this module but we are making an exception.
          file: /var/log/nginx/error.log  # Required
          level: notice
          # - /var/log/nginx/error.log
          # - file: /var/log/nginx/error.log  # Required
          #   level: notice
        open_log_file_cache:  # Can also be set to 'false' to set to 'off'
          max: 1000  # Required
          inactive: 20s
          min_uses: 2  # Number
          valid: 1m
      rewrite:  # Configure rewrite directives
        return:  # Can also be set to a return URL or code directly
          code: 200  # Require 'code' or 'URL'
          text: text  # Only available when using 'code'
          url: https://example.com
        rewrites:
          - regex: (.*).html(.*)  # Required
            replacement: $1$2  # Required
            flag: last  # Can be 'last', 'break', 'redirect' or 'permanent'
        log: false  # Boolean
        set:  # Can be a dictionary or a list of dictionaries
          - variable: $var  # Required
            value: var  # Required
        uninitialized_variable_warn: true  # Boolean
      sub_filter:  # Configure sub filter directives
        sub_filters:  # Can be a dictionary or a list of dictionaries
          - string: server_hostname  # Required
            replacement: $hostname  # Required
        last_modified: false  # Boolean
        once: true  # Boolean
        types: text/html  # String or list
      custom_directives:  # Custom directive for specific use cases not covered by templates -- you need to add a semi-colon at the end of each directive
        - fastcgi_split_path_info ^(.+\.php)(/.+)$;
        - fastcgi_pass unix:/run/php/php7.2-fpm.sock;
      servers:
        - core:
          proxy:
          locations:
            - location: /
              proxy:
        - core:
          ssl:
          locations:
            - location: /backend
              core:

# Enable NGINX 'stub_status' data.
# Will enable 'stub_status' in NGINX Open Source.
# Note - NGINX Plus 'status' has been deprecated since NGINX Plus R13.
# Use the Rest API parameter instead.
# Default is false.
nginx_config_status_enable: false
nginx_config_status_template_file: http/status.conf.j2
nginx_config_status_file_location: /etc/nginx/conf.d/status.conf
nginx_config_status_port: 8080  # Optional -- Defaults to 8080
nginx_config_status_access_log:  # Optional -- Set to 'false' and remove/comment nested variables to disable access log
  location: /var/log/nginx/access.log  # Required
  name: main  # Required
nginx_config_status_allow:  # Optional
  - 127.0.0.1
nginx_config_status_deny:  # Optional
  - all

# Enable NGINX Plus REST API, write access to the REST API, and NGINX Plus dashboard.
# Requires NGINX Plus.
# Default is false.
nginx_config_rest_api_enable: false
nginx_config_rest_api_template_file: http/api.conf.j2
nginx_config_rest_api_file_location: /etc/nginx/conf.d/api.conf
nginx_config_rest_api_port: 8080  # Optional-- Defaults to 8080
nginx_config_rest_api_write: false  # Optional
nginx_config_rest_api_access_log:  # Optional -- Set to 'false' and remove/comment nested variables to disable access log
  location: /var/log/nginx/access.log  # Required
  name: main  # Required
nginx_config_rest_api_allow:  # Optional
  - 127.0.0.1
nginx_config_rest_api_deny:  # Optional
  - all
nginx_config_rest_api_dashboard: false  # Optional
nginx_config_rest_api_dashboard_allow:  # Optional
  - 127.0.0.1
nginx_config_rest_api_dashboard_deny:  # Optional
  - all

# Enable creating dynamic templated NGINX stream configuration files.
# Defaults will not produce a valid configuration. Instead they are meant to showcase
# the options available for templating. Each key represents a new configuration file.
nginx_config_stream_template_enable: false
nginx_config_stream_template:
  - template_file: stream/default.conf.j2
    conf_file_name: default.conf
    conf_file_location: /etc/nginx/conf.d/stream/
    network_streams:
      - listen:
          - ip: 0.0.0.0  # Wrap in square brackets for IPv6 addresses
            port: 80
            ssl: false
            opts: []  # Listen opts like udp which will be added (ssl is automatically added if you specify 'ssl:').
        ssl:
          cert: /etc/ssl/certs/default.crt
          key: /etc/ssl/private/default.key
          dhparam: /etc/ssl/private/dh_param.pem
          protocols: TLSv1 TLSv1.1 TLSv1.2
          ciphers: HIGH:!aNULL:!MD5
          prefer_server_ciphers: true
          session_cache: none
          session_timeout: 5m
          disable_session_tickets: false
          trusted_cert: /etc/ssl/certs/root_CA_cert_plus_intermediates.crt
          ecdh_curve: auto
        include_files: []
        proxy_pass: backend
        proxy_timeout: 3s
        proxy_connect_timeout: 1s
        proxy_protocol: false
        proxy_ssl:
          cert: /etc/ssl/certs/proxy_default.crt
          key: /etc/ssl/private/proxy_default.key
          trusted_cert: /etc/ssl/certs/proxy_ca.crt
          protocols: TLSv1 TLSv1.1 TLSv1.2
          ciphers: HIGH:!aNULL:!MD5
          verify: false
          verify_depth: 1
          session_reuse: true
        health_check_plus: false
        # custom_options: []
    upstreams:
      - name: backend
        lb_method: least_conn
        zone_name: backend
        zone_size: 64k
        sticky_cookie: false
        servers:
          - address: localhost
            port: 8080
            weight: 1
            health_check: max_fails=1 fail_timeout=10s
        # custom_options: []
    # custom_options: []
